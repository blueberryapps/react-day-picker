{"version":3,"sources":["../../src/Helpers.js"],"names":["cancelEvent","getFirstDayOfMonth","getDaysInMonth","getModifiersFromProps","getFirstDayOfWeekFromProps","isRangeOfDates","getModifiersForDay","getMonthsDiff","getWeekArray","startOfMonth","e","preventDefault","stopPropagation","d","Date","getFullYear","getMonth","resultDate","setMonth","setDate","getDate","props","modifiers","selectedDays","disabledDays","firstDayOfWeek","locale","localeUtils","isNaN","getFirstDayOfWeek","value","from","to","modifiersObj","Object","keys","reduce","modifier","push","Array","some","day","range","after","before","d1","d2","fixedWeeks","daysInMonth","dayArray","week","weekArray","i","forEach","length","getDay","indexOf","firstWeek","outsideDate","unshift","lastWeek","lastExtraWeek","lastDay","extraWeek","j","newDate","setHours"],"mappings":"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","file":"Helpers.js","sourcesContent":["\nimport { clone, isSameDay, isDayInRange } from './DateUtils';\nimport { getFirstDayOfWeek } from './LocaleUtils';\n\nexport function cancelEvent(e) {\n  e.preventDefault();\n  e.stopPropagation();\n}\n\nexport function getFirstDayOfMonth(d) {\n  return new Date(d.getFullYear(), d.getMonth(), 1, 12);\n}\n\nexport function getDaysInMonth(d) {\n  const resultDate = getFirstDayOfMonth(d);\n\n  resultDate.setMonth(resultDate.getMonth() + 1);\n  resultDate.setDate(resultDate.getDate() - 1);\n\n  return resultDate.getDate();\n}\n\nexport function getModifiersFromProps(props) {\n  const modifiers = { ...props.modifiers };\n  if (props.selectedDays) {\n    modifiers['selected'] = props.selectedDays;\n  }\n  if (props.disabledDays) {\n    modifiers['disabled'] = props.disabledDays;\n  }\n  return modifiers;\n}\n\nexport function getFirstDayOfWeekFromProps(props) {\n  const { firstDayOfWeek, locale = 'en', localeUtils = {} } = props;\n  if (!isNaN(firstDayOfWeek)) {\n    return firstDayOfWeek;\n  }\n  if (localeUtils.getFirstDayOfWeek) {\n    return localeUtils.getFirstDayOfWeek(locale);\n  }\n  return 0;\n}\n\nexport function isRangeOfDates(value) {\n  return !!(value && value.from && value.to);\n}\n\nexport function getModifiersForDay(d, modifiersObj = {}) {\n  return Object.keys(modifiersObj).reduce((modifiers, modifier) => {\n    const value = modifiersObj[modifier];\n    if (!value) {\n      return modifiers;\n    }\n    if (value instanceof Date && isSameDay(d, value)) {\n      // modifier's value is a date\n      modifiers.push(modifier);\n    } else if (value instanceof Array) {\n      // modifier's value is an array\n      if (value.some((day) => {\n        if (!day) {\n          return false;\n        }\n        if (day instanceof Date) {\n          // this value of the array is a date\n          return isSameDay(d, day);\n        }\n        if (isRangeOfDates(day)) {\n          // this value of the array is a range\n          const range = day;\n          return isDayInRange(d, range);\n        }\n        if (day.after) {\n          return d > day.after;\n        }\n        if (day.before) {\n          return d < day.before;\n        }\n        return false;\n      })) {\n        modifiers.push(modifier);\n      }\n    } else if (isRangeOfDates(value) && isDayInRange(d, value)) {\n      // modifier's value is a range\n      modifiers.push(modifier);\n    } else if (value.after && d > value.after) {\n      // modifier's value has an after date\n      modifiers.push(modifier);\n    } else if (value.before && d < value.before) {\n      // modifier's value has an after date\n      modifiers.push(modifier);\n    } else if (typeof value === 'function' && value(d)) {\n      // modifier's value is a function\n      modifiers.push(modifier);\n    }\n    return modifiers;\n  }, []);\n}\n\nexport function getMonthsDiff(d1, d2) {\n  return (d2.getMonth() - d1.getMonth()) +\n    (12 * (d2.getFullYear() - d1.getFullYear()));\n}\n\nexport function getWeekArray(d, firstDayOfWeek = getFirstDayOfWeek(), fixedWeeks) {\n  const daysInMonth = getDaysInMonth(d);\n  const dayArray = [];\n\n  let week = [];\n  const weekArray = [];\n\n  for (let i = 1; i <= daysInMonth; i += 1) {\n    dayArray.push(new Date(d.getFullYear(), d.getMonth(), i, 12));\n  }\n\n  dayArray.forEach((day) => {\n    if (week.length > 0 && day.getDay() === firstDayOfWeek) {\n      weekArray.push(week);\n      week = [];\n    }\n    week.push(day);\n    if (dayArray.indexOf(day) === dayArray.length - 1) {\n      weekArray.push(week);\n    }\n  });\n\n  // unshift days to start the first week\n  const firstWeek = weekArray[0];\n  for (let i = 7 - firstWeek.length; i > 0; i -= 1) {\n    const outsideDate = clone(firstWeek[0]);\n    outsideDate.setDate(firstWeek[0].getDate() - 1);\n    firstWeek.unshift(outsideDate);\n  }\n\n  // push days until the end of the last week\n  const lastWeek = weekArray[weekArray.length - 1];\n  for (let i = lastWeek.length; i < 7; i += 1) {\n    const outsideDate = clone(lastWeek[lastWeek.length - 1]);\n    outsideDate.setDate(lastWeek[lastWeek.length - 1].getDate() + 1);\n    lastWeek.push(outsideDate);\n  }\n\n  // add extra weeks to reach 6 weeks\n  if (fixedWeeks && weekArray.length < 6) {\n    let lastExtraWeek;\n\n    for (let i = weekArray.length; i < 6; i += 1) {\n      lastExtraWeek = weekArray[weekArray.length - 1];\n      const lastDay = lastExtraWeek[lastExtraWeek.length - 1];\n      const extraWeek = [];\n\n      for (let j = 0; j < 7; j += 1) {\n        const outsideDate = clone(lastDay);\n        outsideDate.setDate(lastDay.getDate() + j + 1);\n        extraWeek.push(outsideDate);\n      }\n\n      weekArray.push(extraWeek);\n    }\n  }\n\n  return weekArray;\n}\n\nexport function startOfMonth(d) {\n  const newDate = clone(d);\n  newDate.setDate(1);\n  newDate.setHours(12, 0, 0, 0); // always set noon to avoid time zone issues\n  return newDate;\n}\n"]}